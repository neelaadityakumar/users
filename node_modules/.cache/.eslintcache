[{"/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/index.js":"1","/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/App.js":"2","/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/reportWebVitals.js":"3","/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/SocialCard.js":"4","/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/Location.js":"5","/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/Phone.js":"6","/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/form-dialog.js":"7"},{"size":500,"mtime":1652187903171,"results":"8","hashOfConfig":"9"},{"size":1757,"mtime":1652196041550,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1652187903171,"results":"11","hashOfConfig":"9"},{"size":886,"mtime":1652194582142,"results":"12","hashOfConfig":"9"},{"size":338,"mtime":1652187903171,"results":"13","hashOfConfig":"9"},{"size":163,"mtime":1652187903171,"results":"14","hashOfConfig":"9"},{"size":6056,"mtime":1652195893826,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"aay5lt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/index.js",[],["33","34"],"/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/App.js",["35"],"/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/reportWebVitals.js",[],"/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/SocialCard.js",["36"],"import \"./SocialCard.css\";\nimport Location from \"./Location\";\nimport Phone from \"./Phone\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nconst SocialCard = ({ userData, deleteUser }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card__title\">\n        <div>\n          {userData.name.first} {userData.name.last}\n        </div>\n\n        <DeleteIcon\n          onClick={() => {\n            deleteUser(userData.login.uuid);\n          }}\n        />\n      </div>\n      <div className=\"card__body\">\n        <Location location={userData.location} />\n        <Phone number={userData.phone} type=\"Home\" />\n        <Phone number={userData.cell} type=\"Cell\" />\n        {userData?.picture && (\n          <div className=\"card__image\">\n            <img src={userData?.picture?.medium} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SocialCard;\n","/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/Location.js",[],"/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/Phone.js",[],"/home/aditya/Desktop/todo/usr/react-social-cards-tutorial/src/form-dialog.js",["37","38"],"import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { useFormik } from \"formik\";\n\nexport default function FormDialog(props) {\n  const randomUser = async () => {\n    const response = await fetch(\"https://randomuser.me/api/?results=10\");\n    const userData = await response.json();\n    return userData.results[0];\n  };\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const formik = useFormik({\n    initialValues: {\n      fname: \"\",\n      lname: \"\",\n      homePhone: \"\",\n      phone: \"\",\n      streetNo: \"\",\n      streetName: \"\",\n      pincode: \"\",\n      city: \"\",\n      state: \"\",\n      country: \"\",\n    },\n    onSubmit: (values) => {\n      const user = {\n        name: {\n          first: values.fname,\n          last: values.lname,\n        },\n        location: {\n          street: {\n            number: values.streetNo,\n            name: values.streetName,\n          },\n          city: values.city,\n          state: values.state,\n          postcode: values.pincode,\n          country: values.country,\n        },\n        cell: values.phone,\n        phone: values.homePhone,\n        login: {\n          uuid: Math.random().toString(36).slice(2, 7),\n        },\n        picture: {\n          large: \"https://source.unsplash.com/random\",\n          medium: \"https://source.unsplash.com/random\",\n          thumbnail: \"https://source.unsplash.com/random\",\n        },\n      };\n      //   console.log(\"user data\", props.userData);\n      //   const newUsers = [...props.data, user];\n      props.addUser(user);\n      //   alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Add a User\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Add Details</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please enter your details here. We will send updates occasionally.\n          </DialogContentText>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              formik.handleSubmit();\n              handleClose();\n            }}\n          >\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"First Name\"\n              variant=\"standard\"\n              required\n              id=\"fname\"\n              name=\"fname\"\n              onChange={formik.handleChange}\n              value={formik.values.fname}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"Last Name\"\n              variant=\"standard\"\n              id=\"lname\"\n              name=\"lname\"\n              onChange={formik.handleChange}\n              value={formik.values.lname}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"Street Number\"\n              type=\"number\"\n              variant=\"standard\"\n              id=\"streetNo\"\n              name=\"streetNo\"\n              onChange={formik.handleChange}\n              value={formik.values.streetNo}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"Street Name\"\n              variant=\"standard\"\n              id=\"streetName\"\n              name=\"streetName\"\n              onChange={formik.handleChange}\n              value={formik.values.streetName}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"City\"\n              variant=\"standard\"\n              id=\"city\"\n              name=\"city\"\n              onChange={formik.handleChange}\n              value={formik.values.city}\n              required\n            />{\" \"}\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"State\"\n              variant=\"standard\"\n              id=\"state\"\n              name=\"state\"\n              onChange={formik.handleChange}\n              value={formik.values.state}\n            />{\" \"}\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"PinCode\"\n              type={\"number\"}\n              variant=\"standard\"\n              id=\"pincode\"\n              name=\"pincode\"\n              onChange={formik.handleChange}\n              value={formik.values.pincode}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              label=\"Country\"\n              required\n              variant=\"standard\"\n              id=\"country\"\n              name=\"country\"\n              onChange={formik.handleChange}\n              value={formik.values.country}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              type={\"number\"}\n              label=\"Home Phone\"\n              variant=\"standard\"\n              id=\"homePhone\"\n              name=\"homePhone\"\n              onChange={formik.handleChange}\n              value={formik.values.homePhone}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              type={\"number\"}\n              label=\"Phone number\"\n              required\n              variant=\"standard\"\n              id=\"phone\"\n              name=\"phone\"\n              onChange={formik.handleChange}\n              value={formik.values.phone}\n            />{\" \"}\n            <div className=\"form-buttons\">\n              <Button onClick={handleClose}>Cancel</Button>\n              <Button type=\"submit\">Submit</Button>{\" \"}\n            </div>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":15},{"ruleId":"47","severity":1,"message":"48","line":26,"column":13,"nodeType":"49","endLine":26,"endColumn":52},{"ruleId":"43","severity":1,"message":"50","line":5,"column":8,"nodeType":"45","messageId":"46","endLine":5,"endColumn":21},{"ruleId":"43","severity":1,"message":"51","line":12,"column":9,"nodeType":"45","messageId":"46","endLine":12,"endColumn":19},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'AddIcon' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DialogActions' is defined but never used.","'randomUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]